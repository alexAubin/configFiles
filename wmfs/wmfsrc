#
# WMFS2 configuration file
#

# Possible file inclusion:
# @include "file"

# Multi theme section
[themes]
   [theme]
	 # Font
	 font = "-*-ohsnap.icons-medium-*-*-*-11-*-*-*-*-*-*-*"
	 #font = "inconsolata-10"
	     
	 # Bars
	 bars_width = 18
	 bars_fg = "#c0c0c0"
     bars_bg = "#101010"

     # Element tags
     tags_normal_fg = "#606060"
     tags_normal_bg = "#101010"
     # tags_normal_statusline = ""

     tags_sel_fg    = "#8696e4"
     tags_sel_bg    = "#101010"
     # tags_sel_statusline = "\R[1;1;3;3;#f6f8fa]"

     tags_occupied_fg = "#d0d0d0"
     tags_occupied_bg = "#101010"
     # tags_occupied_statusline = "\R[1;1;3;3;#c0c0c0]"

     tags_urgent_fg    = "#519f50"
     tags_urgent_bg    = "#ffffff"
     # tags_urgent_statusline = "\R[1;1;4;4;#c0c0c0]"

     tags_border_color = "#eeeeee"
     tags_border_width = 0

     # Frame / Client
     client_normal_fg = "#f6f8fa"
     client_normal_bg = "#121212"
     client_normal_statusline = "\s[5;10;#f6f8fa;x](1;client_close)"
    
     client_sel_fg = "#121212"
     client_sel_bg = "#101010"
     client_sel_statusline = "\s[5;50;#121212;x](1;client_close)"

     frame_bg = "#c0c0c0"
     client_titlebar_width = 0
     client_border_width = 0
    [/theme]
[/themes]

[bars]

      # Position:
      #
      # 0  Top
      # 1  Bottom
      # 2  Hide
    
      # Element type:
      #
      # t  Tags
      # s  Statustext (will take available space)
      # y  Systray (can be set only ONE time among all element)
      # l  Launcher (will be expended at launcher use)

      [bar]
         position = 0
         screen = 0
         elements = "tlsy"   # element order in bar
         theme = "default"
      [/bar]
[/bars]

[tags]
      # Use no screen option or screen = -1 to set tag on each screen
      [tag] name = "www"        layout="tile_grid"    [/tag]
      [tag] name = "doc"        layout="tile_grid"    [/tag]
      [tag] name = "mail"       layout="tile_grid"    [/tag]
      [tag] name = "irc"        layout="tile_grid"    [/tag]
      [tag] name = "dev1"        layout="tile_grid"    [/tag]
      [tag] name = "dev2"        layout="tile_grid"    [/tag]

      # Mousebinds associated to Tags element button
      [mouse] button = "1" func = "tag_click" [/mouse]
      [mouse] button = "4" func = "tag_next"  [/mouse]
      [mouse] button = "5" func = "tag_prev"  [/mouse]
[/tags]

[client]
      theme = "bird"
      key_modifier = "Super"
      autofocus = true
      focus = click
 
      [mouse] button = "1" func = "client_focus_click"    [/mouse]
      [mouse] button = "1" func = "mouse_swap"            [/mouse]
      [mouse] button = "2" func = "mouse_tab"             [/mouse]
      [mouse] button = "3" func = "mouse_resize"          [/mouse]
      [mouse] button = "4" func = "client_focus_next_tab" [/mouse]
      [mouse] button = "5" func = "client_focus_prev_tab" [/mouse]
[/client]

[rules]
    [rule]
        instance = "firefox"
        class = "firefox"
        tag = 0
        screen = 0
        free = false
        tab = false
    [/rule]

    [rule]
        instance = "thunderbird"
        tag = 2
    [/rule]
    
    [rule]
        instance = "weechat"
        class = "urxvtc -name weechat -e weechat"
        tag = 3
    [/rule]
[/rules]

[launchers]
      [launcher]
         name = "exec"
         prompt = " >"
         command = "spawn"
         width = 200
      [/launcher]
[/launchers]

[keys]

    #
    # Clients              : super
    # Tag                  : ctrl
    # WMFS                 : ctrl + alt + r/q
    # Change tag of client : super + alt + Fx
    # Focus different client inside tab : alt + tab/arrows

    # Launcher
    
    [key] mod = {"Super"} key = "p" func = "launcher" cmd = "exec" [/key]
    
    # Launch terminal
    
    [key] mod = {"Shift"} key = "Return" func = "spawn" cmd = "urxvt || xterm" [/key]

    # WMFS

    [key] mod = {"Control", "Alt"} key = "q" func = "quit" [/key]
    [key] mod = {"Control", "Alt"} key = "r" func = "reload" [/key]
    [key] mod = {"Control", "Alt"} key = "n" func = "xbacklight -5" [/key]
    [key] mod = {"Control", "Alt"} key = "m" func = "xbackleght +5" [/key]
        
    # Volume
    
    [key] mod = {""} key = "XF86AudioLowerVolume"    func = "spawn" cmd = "amixer -q -c 0 sset 'Master' 4dB-"    [/key]
    [key] mod = {""} key = "XF86AudioRaiseVolume"    func = "spawn" cmd = "amixer -q -c 0 sset 'Master' 4dB+"    [/key]
    [key] mod = {""} key = "XF86AudioMute"           func = "spawn" cmd = "amixer -q -c 0 sset 'Master' toggle"  [/key]
    [key] mod = {""} key = "XF86Eject"               func = "spawn" cmd = "eject -T"                             [/key]

    # Tag manipulation
    
    [key] mod = {"Super", "Control"} key = "F1" func = "tag_client" cmd = "0" [/key]
    [key] mod = {"Super", "Control"} key = "F2" func = "tag_client" cmd = "1" [/key]
    [key] mod = {"Super", "Control"} key = "F3" func = "tag_client" cmd = "2" [/key]
    [key] mod = {"Super", "Control"} key = "F4" func = "tag_client" cmd = "3" [/key]
    [key] mod = {"Super", "Control"} key = "F5" func = "tag_client" cmd = "4" [/key]
    [key] mod = {"Super", "Control"} key = "F6" func = "tag_client" cmd = "5" [/key]
    [key] mod = {"Super", "Control"} key = "F7" func = "tag_client" cmd = "6" [/key]
    [key] mod = {"Super", "Control"} key = "F8" func = "tag_client" cmd = "7" [/key]

    [key] mod = {"Control"} key = "Right" func = "tag_next" [/key]
    [key] mod = {"Control"} key = "Left"  func = "tag_prev" [/key]

    # Client action
    [key] mod = {"Super"} key = "f" func = "client_toggle_free" [/key]
    [key] mod = {"Super"} key = "q" func = "client_close" [/key]

    # Focus next / prev client and next / prev tabbed client
    [key] mod = {"Alt" }             key = "Tab"   func = "client_focus_next"   [/key]
    [key] mod = {"Alt", "Shift"}     key = "Tab"   func = "client_focus_prev"   [/key]
    [key] mod = {"Alt"}              key = "Left"  func = "client_focus_left"   [/key]
    [key] mod = {"Alt"}              key = "Right" func = "client_focus_right"  [/key]
    [key] mod = {"Alt"}              key = "Up"    func = "client_focus_top"    [/key]
    [key] mod = {"Alt"}              key = "Down"  func = "client_focus_bottom" [/key]

    # swap next client with direction:
    [key] mod = {"Control", "Shift"} key = "Left"  func = "client_swap_left"   [/key]
    [key] mod = {"Control", "Shift"} key = "Right" func = "client_swap_right"  [/key]
    [key] mod = {"Control", "Shift"} key = "Up"    func = "client_swap_top"    [/key]
    [key] mod = {"Control", "Shift"} key = "Down"  func = "client_swap_bottom" [/key]

    # Resize selected tiled client with direction
    [key] mod = {"Super","Alt"} key = "Left"  func = "client_resize_left"   cmd = "20" [/key]
    [key] mod = {"Super","Alt"} key = "Right" func = "client_resize_left"   cmd = "-20" [/key]
    [key] mod = {"Super","Alt"} key = "Up"    func = "client_resize_top"    cmd = "20" [/key]
    [key] mod = {"Super","Alt"} key = "Down"  func = "client_resize_top"    cmd = "-20" [/key]

    # Tabbing command
    #[key] mod = {"Control", "Alt"} key = "Left"  func = "client_tab_left"   [/key]
    #[key] mod = {"Control", "Alt"} key = "Right" func = "client_tab_right"  [/key]
    #[key] mod = {"Control", "Alt"} key = "Up"    func = "client_tab_top"    [/key]
    #[key] mod = {"Control", "Alt"} key = "Down"  func = "client_tab_bottom" [/key]
    #[key] mod = {"Control", "Alt"} key = "u"     func = "client_untab" [/key]
    #[key] mod = {"Super"}            key = "t"     func = "client_tab_next_opened" [/key]

    # Layout manipulation
    [key] mod = {"Control", "Alt"} key = "Down"  func = "layout_vmirror" [/key]
    [key] mod = {"Control", "Alt"} key = "Up"    func = "layout_hmirror" [/key]
    [key] mod = {"Control", "Alt"} key = "Right" func = "layout_rotate_right" [/key]
    [key] mod = {"Control", "Alt"} key = "Left"  func = "layout_rotate_left" [/key]

    [key] mod = {"Control", "Super"} key = "Left"  func = "layout_integrate_left" [/key]
    [key] mod = {"Control", "Super"} key = "Down"  func = "layout_integrate_bottom" [/key]
    [key] mod = {"Control", "Super"} key = "Up"    func = "layout_integrate_top" [/key]
    [key] mod = {"Control", "Super"} key = "Right" func = "layout_integrate_right" [/key]

    # Layout set historic travelling function (TESTING)
    [key] mod = {"Super"}          key = "o" func = "layout_prev_set" [/key]
    [key] mod = {"Super", "Shift"} key = "o" func = "layout_next_set" [/key]


[/keys]
